import os
# from tree_of_thoughts.openaiModels import OpenAILanguageModel
# from tree_of_thoughts.treeofthoughts import TreeofThoughts
from meta_tree_of_thoughts.treeofthoughts import TreeofThoughts
from meta_tree_of_thoughts.thinkingAgent import ThinkingAgent

#


api_model= "gpt-3.5-turbo"


model = ThinkingAgent(api_key='', api_model=api_model)

#choose search algorithm('BFS' or 'DFS')
search_algorithm = "BFS"

# value or vote
evaluation_strategy = "value"

tree_of_thoughts= TreeofThoughts(model, search_algorithm)

input_problem = "use 4 numbers and basic arithmetic operations (+-*/) to obtain 24"
k = 1
T = 3
b = 5
vth = 0.5
timeout = 10
confidence = 0.8 #cmodel is confident on performance
max_iterations = 40 #tree branh nodes 
convergence_threshold = 0.01
convergence_count = 5

#call the solve emthod with the input problem and other params
solution = tree_of_thoughts.solve(input_problem, k, T, b, vth, timeout, confidence, max_iterations, convergence_threshold, convergence_count)
    
                  
    
#use the solution in your production environment
print(f"solution: {solution}")